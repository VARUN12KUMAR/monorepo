version: '3.8'  # Add version

services:
  frontend:
    build:
      context: ./packages/frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=/api
      - DOCKER=true
    networks:
      - app-network
    volumes:
      - ./packages/frontend:/app
      - /app/node_modules
    depends_on:
      - backend

  backend:
    build:
      context: ./packages/backend
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=development
      - PORT=4000
      - HOST=0.0.0.0
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=todo_app
    networks:
      - app-network  # Add network
    volumes:
      - ./packages/backend:/app
      - /app/node_modules
      - /app/dist
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:14-alpine
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: todo_app
    ports:
      - "5432:5432"
    networks:
      - app-network  # Add network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d todo_app"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:  # Define networks
  app-network:
    driver: bridge

volumes:
  postgres_data: